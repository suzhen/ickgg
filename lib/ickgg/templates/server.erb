require "rubygems"
require "bundler/setup"

require "active_support"
require "active_support/dependencies"
require "grape"
require "goliath"
require "em-synchrony/activerecord"
require 'yaml'
require 'mysql2'
require 'redis'
require "pry"
require "#{File.dirname File.expand_path(__FILE__)}/engine"


%w{apis helpers models entities}.each do |dir|
  $LOAD_PATH.unshift File.join(GG.config.app_dir, dir)
end

$LOAD_PATH.unshift GG.config.config_dir

$LOAD_PATH.unshift GG.config.lib_dir
ActiveSupport::Dependencies.autoload_paths << File.expand_path('../../lib', __FILE__)



Goliath::Request.log_block = proc do |env, response, elapsed_time|
  request_params = env.params.collect { |param| param.join(": ") }
  method = env[Goliath::Request::REQUEST_METHOD]
  path = env[Goliath::Request::REQUEST_URI]

  env[Goliath::Request::RACK_LOGGER].info("#{request_params}")
  env[Goliath::Request::RACK_LOGGER].info("#{response.status} #{method} #{path} in #{'%.2f' % elapsed_time} ms")
end

require "application"

class Boot < Goliath::API
  use Goliath::Rack::Params

  def response(env)
    <%= @app_name %>::Application.call(env)
  end

end